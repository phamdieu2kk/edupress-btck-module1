const mongoose = require('mongoose');

const courseSchema = new mongoose.Schema(
  {
    title: { type: String, required: true },
    slug: { type: String, required: true, unique: true },
    description: { type: String },
    image: { type: String },

    // üí∞ Gi√° g·ªëc & gi√° gi·∫£m
    originalPrice: { type: Number, required: true, default: 0 }, // v√≠ d·ª•: 69
    price: { type: Number, required: true, default: 0 }, // gi√° hi·ªán t·∫°i / gi√° gi·∫£m, v√≠ d·ª•: 59

    duration: { type: String },
    level: { type: String },
    lessons: { type: Number },
    category: { type: String },
    instructor: { type: String, required: true },

    // ‚úÖ Th√™m rating ƒë·ªÉ filter/review
    rating: { type: Number, default: 0 },

    // ‚úÖ C√°c tr∆∞·ªùng m·ªü r·ªông
    students: { type: Number, default: 0 }, // v√≠ d·ª•: 790
    isFeatured: { type: Boolean, default: false },
    publishedAt: { type: Date },
  },
  { timestamps: true }
);

// Virtual field: finalPrice (hi·ªÉn th·ªã gi√° d√πng price n·∫øu c√≥, else originalPrice)
courseSchema.virtual("finalPrice").get(function () {
  return this.price && this.price > 0 ? this.price : this.originalPrice;
});

// ƒê·∫£m b·∫£o virtuals c≈©ng hi·ªÉn th·ªã khi JSON h√≥a
courseSchema.set("toJSON", { virtuals: true });
courseSchema.set("toObject", { virtuals: true });

module.exports = mongoose.model("Course", courseSchema);
